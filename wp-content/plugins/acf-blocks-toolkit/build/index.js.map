{"version":3,"file":"index.js","mappings":"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CA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK,KAA6B;AAClC;AACA;AACA,GAAG,SAAS,IAA4E;AACxF;AACA,EAAE,iCAAqB,EAAE,mCAAE;AAC3B;AACA,GAAG;AAAA,kGAAC;AACJ,GAAG,KAAK,EAEN;AACF,CAAC;;;;;;;UC5ED;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNA;AACA;AACA;;AAEA;AACgC;;AAEhC","sources":["webpack://acf-blocks-toolkit/./src/features/block-icons.js","webpack://acf-blocks-toolkit/./src/features/block-styles.js","webpack://acf-blocks-toolkit/external window \"React\"","webpack://acf-blocks-toolkit/external window [\"wp\",\"blockEditor\"]","webpack://acf-blocks-toolkit/external window [\"wp\",\"blocks\"]","webpack://acf-blocks-toolkit/external window [\"wp\",\"components\"]","webpack://acf-blocks-toolkit/external window [\"wp\",\"domReady\"]","webpack://acf-blocks-toolkit/external window [\"wp\",\"editPost\"]","webpack://acf-blocks-toolkit/external window [\"wp\",\"editSite\"]","webpack://acf-blocks-toolkit/external window [\"wp\",\"hooks\"]","webpack://acf-blocks-toolkit/external window [\"wp\",\"i18n\"]","webpack://acf-blocks-toolkit/./node_modules/classnames/index.js","webpack://acf-blocks-toolkit/webpack/bootstrap","webpack://acf-blocks-toolkit/webpack/runtime/compat get default export","webpack://acf-blocks-toolkit/webpack/runtime/define property getters","webpack://acf-blocks-toolkit/webpack/runtime/hasOwnProperty shorthand","webpack://acf-blocks-toolkit/webpack/runtime/make namespace object","webpack://acf-blocks-toolkit/./src/index.js"],"sourcesContent":["/** global acfbtIcons */\n\n/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { addFilter } from '@wordpress/hooks';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport {\n\tButton,\n\tPanelBody,\n\tPanelRow,\n\tToggleControl,\n\t__experimentalGrid as Grid, // eslint-disable-line\n} from '@wordpress/components';\n\nconst icons = acfbtIcons.json;\n\n/**\n * All available icons.\n * (Order determines presentation order)\n */\nexport const ICONS = icons;\n\n/**\n * Add the attributes needed for button icons.\n *\n * @since 0.1.0\n * @param {Object} settings\n */\nfunction addAttributes(settings) {\n\tif (!acfbtIcons.supportedBlocks.includes(settings.name)) {\n\t\treturn settings;\n\t}\n\n\t// Add the block visibility attributes.\n\tconst iconAttributes = {\n\t\ticon: {\n\t\t\ttype: 'string',\n\t\t},\n\t\ticonPositionLeft: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false,\n\t\t},\n\t};\n\n\treturn {\n\t\t...settings,\n\t\tattributes: {\n\t\t\t...settings.attributes,\n\t\t\t...iconAttributes,\n\t\t},\n\t};\n}\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'acf-blocks-toolkit/add-attributes',\n\taddAttributes,\n);\n\n/**\n * Filter the BlockEdit object and add icon inspector controls to button blocks.\n *\n * @since 0.1.0\n * @param {Object} BlockEdit\n */\nfunction addInspectorControls(BlockEdit) {\n\treturn (props) => {\n\t\tif (!acfbtIcons.supportedBlocks.includes(props.name)) {\n\t\t\treturn <BlockEdit {...props} />;\n\t\t}\n\n\t\tconst { attributes, setAttributes } = props;\n\t\tconst { icon: currentIcon, iconPositionLeft } = attributes;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BlockEdit {...props} />\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={__('Icon', 'acf-blocks-toolkit')}\n\t\t\t\t\t\tclassName=\"button-icon-picker\"\n\t\t\t\t\t\tinitialOpen={true}\n\t\t\t\t\t>\n\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t<Grid className=\"button-icon-picker__grid\" columns=\"5\" gap=\"0\">\n\t\t\t\t\t\t\t\t{ICONS.map((icon, index) => (\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\tlabel={icon?.label}\n\t\t\t\t\t\t\t\t\t\tisPressed={currentIcon === icon.value}\n\t\t\t\t\t\t\t\t\t\tclassName={\"button-icon-picker__button button-icon-picker__icon-\" + icon.value }\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\t\t\t// Allow user to disable icons.\n\t\t\t\t\t\t\t\t\t\t\t\ticon: currentIcon === icon.value ? null : icon.value,\n\t\t\t\t\t\t\t\t\t\t\t\ticonPositionLeft: iconPositionLeft || icon?.defaultLeft,\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t\t__html: icon.icon ?? icon.value,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={__('Show icon on left', 'acf-blocks-toolkit')}\n\t\t\t\t\t\t\t\tchecked={iconPositionLeft}\n\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\t\ticonPositionLeft: !iconPositionLeft,\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</PanelRow>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t</>\n\t\t);\n\t};\n}\n\naddFilter(\n\t'editor.BlockEdit',\n\t'acf-blocks-toolkit/add-inspector-controls',\n\taddInspectorControls,\n);\n\n/**\n * Add icon and position classes in the Editor.\n *\n * @since 0.1.0\n * @param {Object} BlockListBlock\n */\nfunction addClasses(BlockListBlock) {\n\treturn (props) => {\n\t\tconst { name, attributes } = props;\n\n\t\tif (!acfbtIcons.supportedBlocks.includes(name) || !attributes?.icon) {\n\t\t\treturn <BlockListBlock {...props} />;\n\t\t}\n\n\t\tconst classes = classnames(props?.className, {\n\t\t\t[`has-icon__${attributes?.icon}`]: attributes?.icon,\n\t\t\t'has-icon-position__left': attributes?.iconPositionLeft,\n\t\t});\n\n\t\treturn <BlockListBlock {...props} className={classes} />;\n\t};\n}\n\naddFilter(\n\t'editor.BlockListBlock',\n\t'acf-blocks-toolkit/add-classes',\n\taddClasses,\n);\n","/** global acfbtStyles */\n\nconst unregisterStyles = acfbtStyles.unregister;\n\n/**\n * WordPress Dependencies\n */\nimport domReady from '@wordpress/dom-ready';\nimport '@wordpress/edit-post'; /* dependencies needed to avoid unregisterBlockStyle race condition */\nimport '@wordpress/edit-site';\nimport { unregisterBlockStyle } from '@wordpress/blocks';\n\n/**\n * Unregister block styles.\n */\ndomReady(() => {\n\tunregisterStyles.forEach((style) => {\n\t\tconst styles = Array.isArray(style[1]) ? style[1] : [style[1]];\n\t\tunregisterBlockStyle(\n\t\t\tstyle[0],\n\t\t\tstyles\n\t\t);\n\t});\n});\n","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"editSite\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"i18n\"];","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Load Features\n */\n\n// Add Icons to Blocks\nimport './features/block-icons';\n\n// Block Style Management.\nimport './features/block-styles';\n"],"names":["classnames","__","addFilter","InspectorControls","Button","PanelBody","PanelRow","ToggleControl","__experimentalGrid","Grid","icons","acfbtIcons","json","ICONS","addAttributes","settings","supportedBlocks","includes","name","iconAttributes","icon","type","iconPositionLeft","default","attributes","addInspectorControls","BlockEdit","props","createElement","setAttributes","currentIcon","Fragment","title","className","initialOpen","columns","gap","map","index","_icon$icon","key","label","isPressed","value","onClick","defaultLeft","dangerouslySetInnerHTML","__html","checked","onChange","addClasses","BlockListBlock","classes","unregisterStyles","acfbtStyles","unregister","domReady","unregisterBlockStyle","forEach","style","styles","Array","isArray"],"sourceRoot":""}